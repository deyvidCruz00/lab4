services:

  mysql:
    image: mysql:8
    container_name: mysql
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: customerorders
    ports:
      - "3307:3306"
    networks:
      - observ-net

  mysqld-exporter:
    image: prom/mysqld-exporter:v0.15.0
    container_name: mysqld-exporter
    environment:
      - MYSQLD_EXPORTER_WEB_LISTEN_ADDRESS="0.0.0.0:9104"
    command:
      - '--config.my-cnf=/etc/mysql-exporter.cnf'
    volumes:
      - ./mysqld-exporter-config/exporter.cnf:/etc/mysql-exporter.cnf:ro
    ports:
      - "9104:9104"
    depends_on:
      - mysql
    networks:
      - observ-net
    restart: unless-stopped

  app1:
    build: ./app
    container_name: app1
    ports:
      - "5001:5000"
    networks:
      - observ-net
    depends_on:
      - mysql

  app2:
    build: ./app
    container_name: app2
    ports:
      - "5002:5000"
    networks:
      - observ-net
    depends_on:
      - mysql

  nginx:
    image: nginx:stable
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8080:8080"
    depends_on:
      - app1
      - app2
    networks:
      - observ-net

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:0.11.0
    container_name: nginx-exporter
    command: -nginx.scrape-uri http://nginx:8080/stub_status
    depends_on:
      - nginx
    networks:
      - observ-net

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    pid: "host"
    networks:
      - observ-net
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($|/)'

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/rules.yml:/etc/prometheus/rules.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    depends_on:
      - node-exporter
      - mysqld-exporter
      - nginx-exporter
    networks:
      - observ-net

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
    depends_on:
      - prometheus
    networks:
      - observ-net

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
    ports:
      - "9093:9093"
    networks:
      - observ-net
  
  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - "1025:1025" 
      - "8025:8025" 
    networks:
      - observ-net

volumes:
  mysql_data:
  grafana_data:

networks:
  observ-net:
    driver: bridge
